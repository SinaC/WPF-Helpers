<UserControl x:Class="Sample.Views.MediatorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:helper="clr-namespace:MVVM;assembly=MVVM" 
             xmlns:ViewModels="clr-namespace:Sample.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance ViewModels:MediatorViewModel}"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <Grid Grid.Row="0" Grid.Column="0" DataContext="{Binding ViewModelA}">
            <TextBox MinWidth="100" HorizontalAlignment="Center" VerticalAlignment="Center" 
                     Text="{Binding MyPropertyA, UpdateSourceTrigger=PropertyChanged}" 
                     helper:AttachedFocus.IsFocused="{Binding IsMyPropertyAFocused}"/>
        </Grid>

        <Grid Grid.Row="0" Grid.Column="1" DataContext="{Binding ViewModelB}">
            <TextBox x:Name="textboxB" MinWidth="100" HorizontalAlignment="Center" VerticalAlignment="Center" 
                     Text="{Binding MyPropertyB, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <CheckBox Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" 
                  IsChecked="{Binding ViewModelA.IsMyPropertyAFocused}">Click to set focus on first text box</CheckBox>

        <TextBlock Grid.Row="2" Grid.Column="0" Text="Click me, EventToCommand, pass param" FontSize="16" FontWeight="Bold" TextWrapping="Wrap" Width="150"
                   HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand" Background="AliceBlue"
                   helper:EventToCommand.Event="UIElement.MouseLeftButtonDown"
                   helper:EventToCommand.CommandParameter="{Binding Text, ElementName=textboxB}"
                   helper:EventToCommand.Command="{Binding Command1}" />

        <TextBlock Grid.Row="2" Grid.Column="1" Text="Click me, EventToCommand, pass args" FontSize="16" FontWeight="Bold" TextWrapping="Wrap" Width="150"
                   HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand" Background="AliceBlue"
                   helper:EventToCommand.Event="UIElement.MouseLeftButtonDown"
                   helper:EventToCommand.Command="{Binding Command2}" />
        <!--<Button Grid.Row="2" Grid.Column="1" FontSize="16" FontWeight="Bold" Width="150"
                Command="{Binding Command1}"
                CommandParameter="{Binding Text, ElementName=textboxB}">
            <TextBlock TextWrapping="Wrap" Width="150" Text="Click me, EventToCommand, pass args"/>
        </Button>-->

    </Grid>
</UserControl>
