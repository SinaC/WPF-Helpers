<UserControl x:Class="SampleWPF.Views.RequestDetail.RequestDetail"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:requestDetailsViewModels="clr-namespace:SampleWPF.ViewModels.RequestDetails" 
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance requestDetailsViewModels:RequestDetailViewModelDesignData, IsDesignTimeCreatable=True}"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="Auto"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                <Setter Property="Height" Value="*"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- SelectedItem must be defined before ItemsSource because of .NET 3.5 bug with TabControl and ComboBox -->
        <ComboBox Grid.Row="0"
                  SelectedItem="{Binding SelectedTypeTheme}"
                  ItemsSource="{Binding TypeThemeList}"/>
        <CheckBox Grid.Row="1"
                  IsChecked="{Binding IsExpanded}"/>
        <TextBox Grid.Row="2" AcceptsReturn="True" AcceptsTab="True"
                 Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                            <Setter Property="Height" Value="Auto"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Button Grid.Row="3"
                IsEnabled="{Binding IsCloseEnabled}"
                Command="{Binding CloseCommand}">
            <TextBlock Text="Cloturer"/>
        </Button>
    </Grid>
</UserControl>
